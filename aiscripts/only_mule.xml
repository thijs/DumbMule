<?xml version="1.0" encoding="utf-8" ?>
<aiscript name="onlymule" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://x4libonline.ddns.net\libraries\aiscripts.xsd" version="5">
  <!-- OnlyMule, Created by thijso. Version 002 -->
  <order id="OnlyMule" name="M5- Dumb Mule" description="Dumb Mule Logic" category="trade" infinite="true">
    <params>
      <!-- menu option: Source Station (Define Source Station) -->
      <param name="sourceStation" type="object" text="Source Station" comment="The source station">
	<input_param name="class" value="[class.station]" />
      </param>
      <!-- menu option: Target Station (Defines destination target) -->
      <param name="targetStation" type="object" text="Target Station" comment="The recipient station">
	<input_param name="class" value="[class.station]" />
      </param>

      <!-- menu option: Two-way Trade (Forces trading back and forth between the stations if used) -->
      <param name="twoWay" type="bool" default="false" text="Return trade" comment="Trades back and forth between stations" />

      <!-- What are we hauling? -->
      <param name="wareBasket" required="false" default="[]" type="list" text="Extra wares" comment="Non-production wares to haul to target">
	<input_param name="type" value="'ware'" />
	<input_param name="cancarry" value="this.ship" />
      </param>
    </params>
    <requires>
      <match shiptype="shiptype.lasertower" negate="true" />
    </requires>
  </order>

  <interrupts>
    <handler ref="AttackHandler" />
    <handler ref="MissileLockHandler" />
    <handler ref="ScannedHandler" />
    <handler ref="InspectedHandler" />
    <handler ref="FoundAbandonedHandler" />
    <handler ref="ResupplyHandler" />
    <handler ref="JobRemoveRequestHandler" />
    <handler ref="TargetInvalidHandler" />
  </interrupts>

  <init>
    <set_value name="$object" exact="this.assignedcontrolled" />
    <set_order_syncpoint_reached order="this.ship.order" />
    <set_command_action commandaction="commandaction.searchingtrades" />

    <set_value name="$debugFileName" exact="'OnlyMule - ' + this.ship.idcode" />
    <debug_to_file name="$debugFileName" directory="'OnlyMule'" text="'Starting Log File Version: 001'" append="false" output="false" />
    
    <do_if value="$sourceStation and ($sourceStation.owner == this.ship.owner)">
      <set_object_commander object="this.ship" commander="$sourceStation" assignment="assignment.trade" />
    </do_if>

    <!-- <debug_to_file name="$debugFileName" directory="'OnlyMule'" text="'pilot: '+this.ship.pilot.knownname+ -->
    <!-- 								      ', pilotskill: '+$pilotSkill+ -->
    <!-- 								      ', ship capacity: '+this.ship.cargo.capacity.container+ -->
    <!-- 								      ', player money: '+player.money" /> -->
  </init>

  <attention min="unknown">
    <actions>

      <label name="prestart" />

      <debug_to_file name="'onlymule- ' + this.ship.knownname + ' ' + this.ship.idcode" directory="'OnlyMule'" text="'ScriptStart'" output="false" append="false" />

      <set_value name="$debugFileName" exact="'OnlyMule - ' + this.ship.idcode" />
      
      <debug_to_file name="$debugFileName" directory="'OnlyMule'" text="'Script start'" />
      
      <!-- <do_if value="not $sourceStation or not $targetStation"> -->
      <!-- 	<!-\- user can still change -\-> -->
      <!-- 	<wait exact="1s" /> -->
      <!-- 	<resume label="finish" /> -->
      <!-- </do_if> -->

      <!-- <set_value name="$wareBasket" exact="[]" /> -->
      
      <!-- <label name="addtoWaresToBasket" /> -->
      <!-- <do_all exact="$waresToAdd.count" counter="$ware"> -->
      <!-- 	<set_value name="$addingWare" exact="$waresToAdd.{$ware}" /> -->
      <!-- 	<do_if value="$addingWare" negate="true"> -->
      <!--     <continue/> -->
      <!-- 	</do_if> -->
      <!-- 	<debug_to_file name="$debugFileName" directory="'OnlyMule'" text="'scanning ware: '+$addingWare" /> -->
      <!-- 	<do_if value="$wareBasket.indexof.{$addingWare}" negate="true"> -->
      <!--     <append_to_list name="$wareBasket" exact="$addingWare" /> -->
      <!--     <debug_to_file name="$debugFileName" directory="'OnlyMule'" text="'adding ware to basket: '+$addingWare.id" /> -->
      <!-- 	</do_if> -->
      <!-- 	<wait min="1ms" max="2ms" /> -->
      <!-- </do_all> -->
      <!-- <!-\- <resume label="wareLists" /> -\-> -->

      <set_value name="$srcStation" exact="$sourceStation" />
      <set_value name="$dstStation" exact="$targetStation" />


      <!-- get existing trade offers from target -->
      <find_buy_offer tradepartner="this.ship" buyer="$dstStation" result="$tradeOffers" excludeempty="false" multiple="true">
	<match_buyer>
	  <match_gate_distance object="$srcStation" min="0">
	    <blacklist group="blacklistgroup.civilian" object="this.ship" />
	  </match_gate_distance>
	</match_buyer>
      </find_buy_offer>
      <wait min="5ms" max="15ms" />

      <set_value name="$sourceProductWares" exact="0" />
      <do_if value="$srcStation.products.count gt 0">
	<set_value name="$sourceProductWares" exact="$srcStation.products.count" />
      </do_if>

      <!-- product wares -->
      <do_all exact="$sourceProductWares" counter="$cts">
	<set_value name="$addingWare" exact="$srcStation.products.{$cts}" />
	<debug_to_file name="$debugFileName" directory="'OnlyMule'" text="'scanning ware: '+$addingWare" />

	<!-- SKIP ENERGY CELLS -->
	<do_if value="$addingWare.ware.id == 'energycells'">
	  <continue/>
	</do_if>

	<do_if value="$wareBasket.indexof.{$addingWare}" negate="true">

	  <!-- get it as offer -->
	  <set_value name="$offerFound" exact="false" />
	  <do_all exact="$tradeOffers.count" counter="$n">
      	    <do_if value="$addingWare == $tradeOffers.{$n}.ware">
	      <set_value name="$offerFound" exact="true" />
	      <break />
	    </do_if>
	  </do_all>

	  <do_if value="not $offerFound">
	    <add_tradeware object="$dstStation" ware="$addingWare" allowbuy="true" allowsell="true" lockavgprice="false" />
	    <wait min="2ms" max="5ms" />

	    <!-- refresh trade offers from target -->
	    <find_buy_offer tradepartner="this.ship" buyer="$dstStation" result="$tradeOffers" excludeempty="false" multiple="true">
	      <match_buyer>
		<match_gate_distance object="$srcStation" min="0">
		  <blacklist group="blacklistgroup.civilian" object="this.ship" />
		</match_gate_distance>
	      </match_buyer>
	    </find_buy_offer>
	  </do_if>

	  <do_all exact="$tradeOffers.count" counter="$n">
	    <set_value name="$tradeOffer" exact="$tradeOffers.{$n}" />
      	    <do_if value="$addingWare == $tradeOffer.ware">
              <append_to_list name="$wareBasket" exact="$tradeOffer" />
              <debug_to_file name="$debugFileName" directory="'OnlyMule'" text="'adding ware '+$tradeOffer.ware+' to basket'" />
	      <break />
      	    </do_if>
	  </do_all>
	  
	</do_if>
	<wait min="1ms" max="5ms" />
      </do_all>
      
      <remove_value name="$sourceProductWares" />

      <!--create new list of wares, so we can shuffle it (randomize), not shuffling $wareBasket, because param-->
      <label name="tradableWares" />
      <set_value name="$tradableWares" exact="$wareBasket.clone" />

      
      <!-- trading -->

      
      <!--lets see if we actually have free space in cargo before trying to trade-->
      <do_if value="this.ship.cargo.free.container lt (this.ship.cargo.capacity.container/10)">
	<debug_to_file name="$debugFileName" directory="'OnlyMule'" text="'  cargo is full =('" />
	<resume label="noTradesPossible" />
      </do_if>

      <set_value name="$isReturn" exact="false" />
      
      <label name="returnTrades" />

      <!--does target station have room to trade?-->
      <do_if value="$dstStation.cargo.free.container lt ($dstStation.cargo.capacity.container/10)">
	<debug_to_file name="$debugFileName" directory="'OnlyMule'" text="'  cargo at destination station is full (isReturn:'+$isReturn+')'" />
	<resume label="noTradesPossible" />
      </do_if>

      
      <set_value name="$loadvol" exact="0" />
      
      <set_value name="$prio1" exact="[]" />
      <set_value name="$prio2" exact="[]" />
      <set_value name="$prio3" exact="[]" />
      <set_value name="$prio4" exact="[]" />
      <set_value name="$prio5" exact="[]" />

      <shuffle_list list="$tradableWares" />
      
      <do_all exact="$tradableWares.count" counter="$tradableWare">
        <!-- <wait min="1ms" max="100ms" comment="Avoid performance peaks with find functions" /> -->
        <set_value name="$currentOffer" exact="$tradableWares.{$tradableWare}" />
	<set_value name="$currentWare" exact="$currentOffer.ware" />
        <debug_to_file name="$debugFileName" directory="'OnlyMule'" text="'ware: '+$currentWare+'. minprice: '+$currentWare.minprice+
                       '. maxprice: '+$currentWare.maxprice+'. average: '+$currentWare.averageprice" />
      
	<set_value name="$cargoRatio" exact="($dstStation.cargo.{$currentWare}.count * 100) / [$dstStation.cargo.{$currentWare}.target, 1].max" />
        <debug_to_file name="$debugFileName" directory="'OnlyMule'" text="'cargoRatio '+$currentWare+': '+ $cargoRatio" />

	<do_if value="(not $isReturn) and ($dstStation.cargo.{$currentWare}.count == 0)">
	  <set_value name="$cargoRatio" exact="0" />
	</do_if>

	<do_if value="$cargoRatio lt 10">
	  <append_to_list name="$prio1" exact="$currentOffer" />
          <debug_to_file name="$debugFileName" directory="'OnlyMule'" text="$currentWare+' added to prio1 list'" />
	</do_if>
	<do_elseif value="$cargoRatio lt 25">
	  <append_to_list name="$prio2" exact="$currentOffer" />
          <debug_to_file name="$debugFileName" directory="'OnlyMule'" text="$currentWare+' added to prio2 list'" />
	</do_elseif>
	<do_elseif value="$cargoRatio lt 50">
	  <append_to_list name="$prio3" exact="$currentOffer" />
          <debug_to_file name="$debugFileName" directory="'OnlyMule'" text="$currentWare+' added to prio3 list'" />
	</do_elseif>
	<do_elseif value="$cargoRatio lt 75">
	  <append_to_list name="$prio4" exact="$currentOffer" />
          <debug_to_file name="$debugFileName" directory="'OnlyMule'" text="$currentWare+' added to prio4 list'" />
	</do_elseif>
	<do_else>
	  <append_to_list name="$prio5" exact="$currentOffer" />
          <debug_to_file name="$debugFileName" directory="'OnlyMule'" text="$currentWare+' added to prio5 list'" />
	</do_else>
      </do_all>

      <set_value name="$wareList" exact="[]" />
      
      <do_all exact="$prio1.count" counter="$p1">
	<append_to_list name="$wareList" exact="$prio1.{$p1}" />
      </do_all>
      <do_all exact="$prio2.count" counter="$p2">
	<append_to_list name="$wareList" exact="$prio2.{$p2}" />
      </do_all>
      <do_all exact="$prio3.count" counter="$p3">
	<append_to_list name="$wareList" exact="$prio3.{$p3}" />
      </do_all>
      <do_all exact="$prio4.count" counter="$p4">
	<append_to_list name="$wareList" exact="$prio4.{$p4}" />
      </do_all>
      <do_all exact="$prio5.count" counter="$p5">
	<append_to_list name="$wareList" exact="$prio5.{$p5}" />
      </do_all>

      <remove_value name="$prio1" />
      <remove_value name="$prio2" />
      <remove_value name="$prio3" />
      <remove_value name="$prio4" />
      <remove_value name="$prio5" />

      <!-- create trades -->
      <do_all exact="$wareList.count" counter="$idx">

	<set_value name="$buyOffer" exact="$wareList.{$idx}" />
	<set_value name="$ware" exact="$buyOffer.ware" />
	
	<set_value name="$cargoHauled" exact="[this.ship.cargo.{$ware}.free,$srcStation.cargo.{$ware}.count].min" />

	<find_sell_offer tradepartner="this.ship" seller="$srcStation" result="$sellOffers" multiple="true" wares="$ware">
	  <match_seller>
	    <match_gate_distance object="$srcStation" min="0">
	      <blacklist group="blacklistgroup.civilian" object="this.ship" />
	    </match_gate_distance>
	  </match_seller>
	</find_sell_offer>
	
	<create_trade_order name="$getWare" object="this.object" tradeoffer="$sellOffers.{0}" amount="$cargoHauled" immediate="false" />
	<create_trade_order name="$dropWare" object="this.object" tradeoffer="$buyOffer" amount="$cargoHauled" immediate="false" />
	
	<debug_to_file name="$debugFileName" directory="'OnlyMule'" text="'moving ' +$cargoHauled + ' ' + $ware +' from ' +$srcStation.owner.knownname + ' to ' +$dstStation.owner.knownname " />

        <write_to_logbook category="upkeep" title="'OnlyMule: '+this.ship.knownname+' ( '+this.ship.idcode+' )'" interaction="showonmap"
                          object="this.ship" text="'Transporting '+$cargoHauled+' '+$ware+' from '+$srcStation.owner.knownname+
						     ' to ' + $dstStation.owner.knownname" />
	
	<!-- do we have room for more? -->
	<!-- <set_value name="$loadvol" exact="$loadvol + ($ware.volume * $cargoHauled)" /> -->
	<!-- <do_if value="(($loadvol / this.ship.cargo.cargo.capacity.all) * 100) lt 60"> -->
	<!--   <resume label="moreTrades" /> -->
	<!-- </do_if> -->
	<!-- <do_else> -->

	<!-- for now, leave it at that... -->
	<break/>
	
	<!-- </do_else> -->

      </do_all>

      <!-- did we already do the return trip? -->
      <do_if value="not $isReturn">
	<set_value name="$isReturn" exact="true" />

	<debug_to_file name="$debugFileName" directory="'OnlyMule'" text="'  starting return calculations...'" />
	
	<!-- rearrange src and dst -->
	<set_value name="$sourceWares" exact="$tradableWares" />

	<set_value name="$potentialWares" exact="[]" />
	<set_value name="$tradableWares" exact="[]" />

	<set_value name="$srcStation" exact="$targetStation" />
	<set_value name="$dstStation" exact="$sourceStation" />

	
	<set_value name="$sourceProductWares" exact="0" />
	<do_if value="$srcStation.products.count gt 0">
	  <set_value name="$sourceProductWares" exact="$srcStation.products.count" />
	</do_if>

	<!-- product wares -->
	<do_all exact="$sourceProductWares" counter="$cts">
	  <set_value name="$addingWare" exact="$srcStation.products.{$cts}" />
	  <debug_to_file name="$debugFileName" directory="'OnlyMule'" text="'scanning return ware: '+$addingWare" />

	  <!-- SKIP ENERGY CELLS -->
	  <do_if value="$addingWare.ware.id == 'energycells'">
	    <continue/>
	  </do_if>

	  <do_if value="$potentialWares.indexof.{$addingWare}" negate="true">
	    <do_if value="$sourceWares.indexof.{$addingWare}" negate="true"> <!-- skip wares we just brought here -->
              <append_to_list name="$potentialWares" exact="$addingWare" />
              <debug_to_file name="$debugFileName" directory="'OnlyMule'" text="'adding ware '+$addingWare+' to potential basket'" />
	    </do_if>
	  </do_if>
	  <wait min="1ms" max="5ms" />
	</do_all>
	
	<remove_value name="$sourceProductWares" />


	<set_value name="$sourceTradeWares" exact="0" />
	<do_if value="$srcStation.trades.count gt 0">
	  <set_value name="$sourceTradeWares" exact="$srcStation.trades.count" />
	</do_if>

	<!-- trade wares -->
	<do_all exact="$sourceTradeWares" counter="$cts">
	  <set_value name="$addingWare" exact="$srcStation.tradewares.{$cts}" />
	  <debug_to_file name="$debugFileName" directory="'OnlyMule'" text="'scanning return trade ware: '+$addingWare" />

	  <!-- SKIP ENERGY CELLS -->
	  <do_if value="$addingWare.ware.id == 'energycells'">
	    <continue/>
	  </do_if>

	  <do_if value="$potentialWares.indexof.{$addingWare}" negate="true">
	    <do_if value="$sourceWares.indexof.{$addingWare}" negate="true"> <!-- skip wares we just brought here -->
              <append_to_list name="$potentialWares" exact="$addingWare" />
              <debug_to_file name="$debugFileName" directory="'OnlyMule'" text="'adding trade ware '+$addingWare+' to potential basket'" />
	    </do_if>
	  </do_if>
	  <wait min="1ms" max="5ms" />
	</do_all>
	
	<remove_value name="$sourceTradeWares" />
	
	<!-- figure out what wares the source station actually wants -->

	<!-- these don't need blacklist filtering because the player picked the stations themselves in the UI -->
	<find_buy_offer tradepartner="this.ship" buyer="$targetStation" result="$needs" excludeempty="false" multiple="true">
	  <match_buyer>
	    <match_gate_distance object="$sourceStation" min="0">
	      <blacklist group="blacklistgroup.civilian" object="this.ship" />
	    </match_gate_distance>
	  </match_buyer>
	</find_buy_offer>

	<do_all exact="$needs.count" counter="$n">
	  <set_value name="$trade" exact="$needs.{$n}" />
	  <do_if value="$potentialWares.indexof.{$trade.ware}">
            <append_to_list name="$tradableWares" exact="$trade.ware" />
            <debug_to_file name="$debugFileName" directory="'OnlyMule'" text="'adding return ware '+$trade.ware+' to basket'" />
	  </do_if>
	</do_all>
	
	<resume label="returnTrades" />
      </do_if>


      <label name="noTradesPossible" />
      <debug_to_file name="$debugFileName" directory="'OnlyMule'" text="'--- NO POSSIBLE TRADES FOUND ---'" />
      <!-- <set_value name="this.$randomXIdling" exact="1" /> -->
      <!--I could not find any trade for the required min profit, maybe scale down (use slider)? visit more stations/deploy more sattelites-->
      <wait min="120s" max="200s" />

      <label name="finish" />

      <debug_to_file name="$debugFileName" directory="'OnlyMule'" text="'    end'" />
    </actions>
  </attention>
</aiscript>
